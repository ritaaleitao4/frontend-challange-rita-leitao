{"remainingRequest":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js!/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypnotic/Downloads/frontend-challenge-master 3/src/pages/TranscriptionsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/src/pages/TranscriptionsView.vue","mtime":1580407291233},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Header from '@/components/core/Header.vue';\nimport TranscriptionsList from '@/components/transcriptions/TranscriptionsList.vue';\nimport ErrorMessage from '@/components/core/ErrorMessage.vue';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'TranscriptionsView',\n  components: {\n    Header: Header,\n    TranscriptionsList: TranscriptionsList,\n    ErrorMessage: ErrorMessage\n  },\n  computed: _objectSpread({}, mapGetters(['getInfoDataTranscriptions', 'getInfoDataErrorMessage']), {\n    data: function data() {\n      return this.getInfoDataTranscriptions;\n    },\n    errorMessage: function errorMessage() {\n      return this.getInfoDataErrorMessage;\n    }\n  }),\n  methods: _objectSpread({}, mapActions(['uploadTranscriptionsData', 'actionGetTranscriptionsData']), {\n    handleDataUpload: function handleDataUpload() {\n      this.uploadTranscriptionsData(this.getInfoDataTranscriptions);\n    },\n    handleDataFetch: function handleDataFetch() {\n      this.actionGetTranscriptionsData();\n    }\n  })\n};",{"version":3,"sources":["TranscriptionsView.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAA,MAAA,MAAA,8BAAA;AACA,OAAA,kBAAA,MAAA,oDAAA;AACA,OAAA,YAAA,MAAA,oCAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,kBAAA,EAAA,kBAFA;AAGA,IAAA,YAAA,EAAA;AAHA,GAFA;AAOA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,2BADA,EAEA,yBAFA,CAAA,CADA;AAKA,IAAA,IALA,kBAKA;AACA,aAAA,KAAA,yBAAA;AACA,KAPA;AAQA,IAAA,YARA,0BAQA;AACA,aAAA,KAAA,uBAAA;AACA;AAVA,IAPA;AAmBA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,0BADA,EAEA,6BAFA,CAAA,CADA;AAKA,IAAA,gBALA,8BAKA;AACA,WAAA,wBAAA,CAAA,KAAA,yBAAA;AACA,KAPA;AAQA,IAAA,eARA,6BAQA;AACA,WAAA,2BAAA;AACA;AAVA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @uploadData=\"handleDataUpload\" @fetchData=\"handleDataFetch\"></Header>\n    <section>\n      <TranscriptionsList :list-data=\"data\"></TranscriptionsList>\n    </section>\n    <ErrorMessage :error-message=\"errorMessage\"></ErrorMessage>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/core/Header.vue'\nimport TranscriptionsList from '@/components/transcriptions/TranscriptionsList.vue'\nimport ErrorMessage from '@/components/core/ErrorMessage.vue'\nimport { mapGetters, mapActions } from 'vuex'\n\nexport default {\n  name: 'TranscriptionsView',\n  components: {\n    Header,\n    TranscriptionsList,\n    ErrorMessage\n  },\n  computed: {\n    ...mapGetters([\n      'getInfoDataTranscriptions',\n      'getInfoDataErrorMessage'\n    ]),\n    data () {\n      return this.getInfoDataTranscriptions\n    },\n    errorMessage () {\n      return this.getInfoDataErrorMessage\n    }\n  },\n  methods: {\n    ...mapActions([\n      'uploadTranscriptionsData',\n      'actionGetTranscriptionsData'\n    ]),\n    handleDataUpload () {\n      this.uploadTranscriptionsData(this.getInfoDataTranscriptions)\n    },\n    handleDataFetch () {\n      this.actionGetTranscriptionsData()\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.container {\n  width: 100%;\n  min-height: 100vh;\n  overflow: hidden;\n  position: relative;\n\n  section {\n    width: 100%;\n    max-width: $content-width;\n    margin: $default-margin auto;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages"}]}