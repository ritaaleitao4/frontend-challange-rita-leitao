{"remainingRequest":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js!/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/eslint-loader/index.js??ref--13-0!/Users/hypnotic/Downloads/frontend-challenge-master 3/src/store/modules/transcriptions.js","dependencies":[{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/src/store/modules/transcriptions.js","mtime":1580394821879},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import transcriptionsServices from '@/api/transcriptionsServices';\nimport _ from 'lodash';\nexport default {\n  state: {\n    transcriptionsData: [],\n    errorMessage: ''\n  },\n  mutations: {\n    modifyListData: function modifyListData(state, data) {\n      state.transcriptionsData = data;\n    },\n    deleteListItem: function deleteListItem(state, id) {\n      state.transcriptionsData = _.remove(state.transcriptionsData, function (arr) {\n        return arr.id !== id;\n      });\n    },\n    addListItem: function addListItem(state, data) {\n      var listItem = {\n        id: _.random(100000000, 100000000000000),\n        voice: '',\n        text: ''\n      };\n      state.transcriptionsData.push(listItem);\n    },\n    displayError: function displayError(state, err) {\n      state.errorMessage = err;\n      window.setTimeout(function () {\n        state.errorMessage = '';\n      }, 3000);\n    }\n  },\n  actions: {\n    fetchTranscriptionsData: function fetchTranscriptionsData(ctx) {\n      transcriptionsServices.fetchTranscriptions().then(function (res) {\n        ctx.commit('modifyListData', res.data);\n      }, function (err) {\n        if (err) {\n          ctx.commit('displayError', 'An error occured while retrieving the transcriptions. Please try again.');\n        }\n      });\n    },\n    addNewTranscription: function addNewTranscription(ctx) {\n      ctx.commit('addListItem');\n    },\n    deleteTranscription: function deleteTranscription(ctx, id) {\n      ctx.commit('deleteListItem', id);\n    },\n    uploadTranscriptionsData: function uploadTranscriptionsData(ctx, data) {\n      transcriptionsServices.saveTranscriptions(this.state.transcriptions.transcriptionsData).then(function (res) {//\n      }, function (err) {\n        if (err) {\n          ctx.commit('displayError', 'An error occured while saving the transcriptions. Please try again.');\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/hypnotic/Downloads/frontend-challenge-master 3/src/store/modules/transcriptions.js"],"names":["transcriptionsServices","_","state","transcriptionsData","errorMessage","mutations","modifyListData","data","deleteListItem","id","remove","arr","addListItem","listItem","random","voice","text","push","displayError","err","window","setTimeout","actions","fetchTranscriptionsData","ctx","fetchTranscriptions","then","res","commit","addNewTranscription","deleteTranscription","uploadTranscriptionsData","saveTranscriptions","transcriptions"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,8BAAnC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,kBAAkB,EAAE,EADf;AAELC,IAAAA,YAAY,EAAE;AAFT,GADM;AAKbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACOJ,KADP,EACcK,IADd,EACoB;AAC3BL,MAAAA,KAAK,CAACC,kBAAN,GAA2BI,IAA3B;AACD,KAHQ;AAITC,IAAAA,cAJS,0BAION,KAJP,EAIcO,EAJd,EAIkB;AACzBP,MAAAA,KAAK,CAACC,kBAAN,GAA2BF,CAAC,CAACS,MAAF,CAASR,KAAK,CAACC,kBAAf,EAAmC,UAACQ,GAAD,EAAS;AACrE,eAAOA,GAAG,CAACF,EAAJ,KAAWA,EAAlB;AACD,OAF0B,CAA3B;AAGD,KARQ;AASTG,IAAAA,WATS,uBASIV,KATJ,EASWK,IATX,EASiB;AACxB,UAAMM,QAAQ,GAAG;AACfJ,QAAAA,EAAE,EAAER,CAAC,CAACa,MAAF,CAAS,SAAT,EAAoB,eAApB,CADW;AAEfC,QAAAA,KAAK,EAAE,EAFQ;AAGfC,QAAAA,IAAI,EAAE;AAHS,OAAjB;AAKAd,MAAAA,KAAK,CAACC,kBAAN,CAAyBc,IAAzB,CAA8BJ,QAA9B;AACD,KAhBQ;AAiBTK,IAAAA,YAjBS,wBAiBKhB,KAjBL,EAiBYiB,GAjBZ,EAiBiB;AACxBjB,MAAAA,KAAK,CAACE,YAAN,GAAqBe,GAArB;AAEAC,MAAAA,MAAM,CAACC,UAAP,CAAkB,YAAM;AACtBnB,QAAAA,KAAK,CAACE,YAAN,GAAqB,EAArB;AACD,OAFD,EAEG,IAFH;AAGD;AAvBQ,GALE;AA8BbkB,EAAAA,OAAO,EAAE;AACPC,IAAAA,uBADO,mCACkBC,GADlB,EACuB;AAC5BxB,MAAAA,sBAAsB,CAACyB,mBAAvB,GAA6CC,IAA7C,CAAkD,UAACC,GAAD,EAAS;AACzDH,QAAAA,GAAG,CAACI,MAAJ,CAAW,gBAAX,EAA6BD,GAAG,CAACpB,IAAjC;AACD,OAFD,EAEG,UAACY,GAAD,EAAS;AACV,YAAIA,GAAJ,EAAS;AACPK,UAAAA,GAAG,CAACI,MAAJ,CAAW,cAAX,EAA2B,yEAA3B;AACD;AACF,OAND;AAOD,KATM;AAUPC,IAAAA,mBAVO,+BAUcL,GAVd,EAUmB;AACxBA,MAAAA,GAAG,CAACI,MAAJ,CAAW,aAAX;AACD,KAZM;AAaPE,IAAAA,mBAbO,+BAacN,GAbd,EAamBf,EAbnB,EAauB;AAC5Be,MAAAA,GAAG,CAACI,MAAJ,CAAW,gBAAX,EAA6BnB,EAA7B;AACD,KAfM;AAgBPsB,IAAAA,wBAhBO,oCAgBmBP,GAhBnB,EAgBwBjB,IAhBxB,EAgB8B;AACnCP,MAAAA,sBAAsB,CAACgC,kBAAvB,CAA0C,KAAK9B,KAAL,CAAW+B,cAAX,CAA0B9B,kBAApE,EAAwFuB,IAAxF,CAA6F,UAACC,GAAD,EAAS,CACpG;AACD,OAFD,EAEG,UAACR,GAAD,EAAS;AACV,YAAIA,GAAJ,EAAS;AACPK,UAAAA,GAAG,CAACI,MAAJ,CAAW,cAAX,EAA2B,qEAA3B;AACD;AACF,OAND;AAOD;AAxBM;AA9BI,CAAf","sourcesContent":["import transcriptionsServices from '@/api/transcriptionsServices'\nimport _ from 'lodash'\n\nexport default {\n  state: {\n    transcriptionsData: [],\n    errorMessage: ''\n  },\n  mutations: {\n    modifyListData (state, data) {\n      state.transcriptionsData = data\n    },\n    deleteListItem (state, id) {\n      state.transcriptionsData = _.remove(state.transcriptionsData, (arr) => {\n        return arr.id !== id\n      })\n    },\n    addListItem (state, data) {\n      const listItem = {\n        id: _.random(100000000, 100000000000000),\n        voice: '',\n        text: ''\n      }\n      state.transcriptionsData.push(listItem)\n    },\n    displayError (state, err) {\n      state.errorMessage = err\n\n      window.setTimeout(() => {\n        state.errorMessage = ''\n      }, 3000)\n    }\n  },\n  actions: {\n    fetchTranscriptionsData (ctx) {\n      transcriptionsServices.fetchTranscriptions().then((res) => {\n        ctx.commit('modifyListData', res.data)\n      }, (err) => {\n        if (err) {\n          ctx.commit('displayError', 'An error occured while retrieving the transcriptions. Please try again.')\n        }\n      })\n    },\n    addNewTranscription (ctx) {\n      ctx.commit('addListItem')\n    },\n    deleteTranscription (ctx, id) {\n      ctx.commit('deleteListItem', id)\n    },\n    uploadTranscriptionsData (ctx, data) {\n      transcriptionsServices.saveTranscriptions(this.state.transcriptions.transcriptionsData).then((res) => {\n        //\n      }, (err) => {\n        if (err) {\n          ctx.commit('displayError', 'An error occured while saving the transcriptions. Please try again.')\n        }\n      })\n    }\n  }\n}\n"]}]}