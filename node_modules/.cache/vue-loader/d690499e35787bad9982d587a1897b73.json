{"remainingRequest":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypnotic/Desktop/frontend-challenge/src/pages/TranscriptionsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypnotic/Desktop/frontend-challenge/src/pages/TranscriptionsView.vue","mtime":1580427951783},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex'\nimport Header from '@/components/transcriptionsStructure/Header.vue'\nimport TranscriptionsList from '@/components/transcriptionsStructure/TranscriptionsList.vue'\nimport ErrorMessage from '@/components/elements/ErrorMessage.vue'\n\nexport default {\n  name: 'TranscriptionsView',\n  components: {\n    Header,\n    TranscriptionsList,\n    ErrorMessage,\n  },\n  computed: {\n    ...mapGetters([\n      'getInfoDataTranscriptions',\n      'getInfoDataErrorMessage',\n    ]),\n    data() {\n      return this.getInfoDataTranscriptions\n    },\n    errorMessage() {\n      return this.getInfoDataErrorMessage\n    },\n  },\n  methods: {\n    ...mapActions([\n      'uploadTranscriptionsData',\n      'actionGetTranscriptionsData',\n    ]),\n    handleDataUpload() {\n      this.uploadTranscriptionsData(this.getInfoDataTranscriptions)\n    },\n    handleDataFetch() {\n      this.actionGetTranscriptionsData()\n    },\n  },\n}\n",{"version":3,"sources":["TranscriptionsView.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TranscriptionsView.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @uploadData=\"handleDataUpload\" @fetchData=\"handleDataFetch\"></Header>\n    <ErrorMessage :error-message=\"errorMessage\"></ErrorMessage>\n    <section>\n      <TranscriptionsList :list-data=\"data\"></TranscriptionsList>\n    </section>\n  </div>\n</template>\n\n<script>\n  import { mapGetters, mapActions } from 'vuex'\n  import Header from '@/components/transcriptionsStructure/Header.vue'\n  import TranscriptionsList from '@/components/transcriptionsStructure/TranscriptionsList.vue'\n  import ErrorMessage from '@/components/elements/ErrorMessage.vue'\n\n  export default {\n    name: 'TranscriptionsView',\n    components: {\n      Header,\n      TranscriptionsList,\n      ErrorMessage,\n    },\n    computed: {\n      ...mapGetters([\n        'getInfoDataTranscriptions',\n        'getInfoDataErrorMessage',\n      ]),\n      data() {\n        return this.getInfoDataTranscriptions\n      },\n      errorMessage() {\n        return this.getInfoDataErrorMessage\n      },\n    },\n    methods: {\n      ...mapActions([\n        'uploadTranscriptionsData',\n        'actionGetTranscriptionsData',\n      ]),\n      handleDataUpload() {\n        this.uploadTranscriptionsData(this.getInfoDataTranscriptions)\n      },\n      handleDataFetch() {\n        this.actionGetTranscriptionsData()\n      },\n    },\n  }\n</script>\n\n<style scoped lang=\"scss\">\n  .container {\n    width: 100%;\n    min-height: 100vh;\n    overflow: hidden;\n    position: relative;\n    background-color: $color-bg;\n\n    section {\n      width: 100%;\n      max-width: $content-width;\n      margin: $default-margin auto;\n    }\n  }\n</style>\n"]}]}