{"remainingRequest":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypnotic/Downloads/frontend-challenge-master 3/src/views/TranscriptionsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/src/views/TranscriptionsView.vue","mtime":1580402398175},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Header from '@/components/core/Header.vue'\nimport TranscriptionsList from '@/components/transcriptions/TranscriptionsList.vue'\nimport ErrorMessage from '@/components/core/ErrorMessage.vue'\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'TranscriptionsView',\n  components: {\n    Header,\n    TranscriptionsList,\n    ErrorMessage\n  },\n  methods: {\n    ...mapActions([\n      'uploadTranscriptionsData',\n      'actionGetTranscriptionsData'\n    ]),\n    handleDataUpload () {\n      this.uploadTranscriptionsData()\n    },\n    handleDataFetch () {\n      this.actionGetTranscriptionsData()\n    }\n  },\n  computed: {\n    ...mapState([\n      'transcriptionsData',\n      'errorMessage'\n    ]),\n    dataTranscriptions () {\n      console.log(this.transcriptionsData)\n      return this.transcriptionsData\n    },\n    setErrorMessage () {\n      return this.errorMessage\n    }\n  },\n  created() {\n    console.log( this.$store)\n  }\n}\n",{"version":3,"sources":["TranscriptionsView.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TranscriptionsView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @uploadData=\"handleDataUpload\" @fetchData=\"handleDataFetch\"></Header>\n    <section>\n      <TranscriptionsList :list-data=\"dataTranscriptions\"></TranscriptionsList>\n    </section>\n    <ErrorMessage :error-message=\"setErrorMessage\"></ErrorMessage>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/core/Header.vue'\nimport TranscriptionsList from '@/components/transcriptions/TranscriptionsList.vue'\nimport ErrorMessage from '@/components/core/ErrorMessage.vue'\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'TranscriptionsView',\n  components: {\n    Header,\n    TranscriptionsList,\n    ErrorMessage\n  },\n  methods: {\n    ...mapActions([\n      'uploadTranscriptionsData',\n      'actionGetTranscriptionsData'\n    ]),\n    handleDataUpload () {\n      this.uploadTranscriptionsData()\n    },\n    handleDataFetch () {\n      this.actionGetTranscriptionsData()\n    }\n  },\n  computed: {\n    ...mapState([\n      'transcriptionsData',\n      'errorMessage'\n    ]),\n    dataTranscriptions () {\n      console.log(this.transcriptionsData)\n      return this.transcriptionsData\n    },\n    setErrorMessage () {\n      return this.errorMessage\n    }\n  },\n  created() {\n    console.log( this.$store)\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/scss/main.scss';\n\n.container {\n  width: 100%;\n  min-height: 100vh;\n  overflow: hidden;\n  position: relative;\n\n  section {\n    width: 100%;\n    max-width: $content-width;\n    margin: $default-margin auto;\n  }\n}\n</style>\n"]}]}