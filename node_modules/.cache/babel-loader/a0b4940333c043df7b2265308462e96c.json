{"remainingRequest":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js!/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/eslint-loader/index.js??ref--13-0!/Users/hypnotic/Downloads/frontend-challenge-master 3/src/api/transcriptionsApi.js","dependencies":[{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/src/api/transcriptionsApi.js","mtime":1580394527828},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hypnotic/Downloads/frontend-challenge-master 3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport appConfig from '@/config';\nimport * as Endpoint from \"./transcriptionsEndpoints\";\nexport default {\n  fetchTranscriptions: function fetchTranscriptions() {\n    return new Promise(function (resolve, reject) {\n      axios.get(Endpoint.GetTranscriptions).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  saveTranscriptions: function saveTranscriptions(data) {\n    return new Promise(function (resolve, reject) {\n      axios.post(Endpoint.GetTranscriptions, data).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",{"version":3,"sources":["/Users/hypnotic/Downloads/frontend-challenge-master 3/src/api/transcriptionsApi.js"],"names":["axios","appConfig","Endpoint","fetchTranscriptions","Promise","resolve","reject","get","GetTranscriptions","then","res","catch","error","saveTranscriptions","data","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAO,KAAKC,QAAZ;AAEA,eAAe;AACbC,EAAAA,mBADa,iCACU;AACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,MAAAA,KAAK,CAACO,GAAN,CAAUL,QAAQ,CAACM,iBAAnB,EACGC,IADH,CACQ,UAAUC,GAAV,EAAe;AACnBL,QAAAA,OAAO,CAACK,GAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBN,QAAAA,MAAM,CAACM,KAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD,GAXY;AAYbC,EAAAA,kBAZa,8BAYOC,IAZP,EAYa;AACxB,WAAO,IAAIV,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CN,MAAAA,KAAK,CAACe,IAAN,CAAWb,QAAQ,CAACM,iBAApB,EAAuCM,IAAvC,EACGL,IADH,CACQ,UAAUC,GAAV,EAAe;AACnBL,QAAAA,OAAO,CAACK,GAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBN,QAAAA,MAAM,CAACM,KAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;AAtBY,CAAf","sourcesContent":["import axios from 'axios'\nimport appConfig from '@/config'\nimport * as Endpoint from './transcriptionsEndpoints'\n\nexport default {\n  fetchTranscriptions () {\n    return new Promise((resolve, reject) => {\n      axios.get(Endpoint.GetTranscriptions)\n        .then(function (res) {\n          resolve(res)\n        })\n        .catch(function (error) {\n          reject(error)\n        })\n    })\n  },\n  saveTranscriptions (data) {\n    return new Promise(function (resolve, reject) {\n      axios.post(Endpoint.GetTranscriptions, data)\n        .then(function (res) {\n          resolve(res)\n        })\n        .catch(function (error) {\n          reject(error)\n        })\n    })\n  }\n}\n"]}]}