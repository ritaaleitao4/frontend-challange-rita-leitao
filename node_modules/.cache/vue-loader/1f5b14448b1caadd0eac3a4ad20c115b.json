{"remainingRequest":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypnotic/Desktop/frontend-challenge/src/components/transcriptions/TranscriptionsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypnotic/Desktop/frontend-challenge/src/components/transcriptions/TranscriptionsList.vue","mtime":1580421018155},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hypnotic/Desktop/frontend-challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport TranscriptionsListItem from '@components/transcriptions/TranscriptionsListItem.vue'\n\nexport default {\n  name: 'TranscriptionsList',\n  props: {\n    listData: {\n      required: true,\n      type: Array,\n    },\n  },\n  components: {\n    TranscriptionsListItem,\n  },\n  methods: {\n    ...mapActions([\n      'addNewTranscription',\n    ]),\n    addNewData() {\n      this.addNewTranscription()\n    },\n  },\n}\n",{"version":3,"sources":["TranscriptionsList.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TranscriptionsList.vue","sourceRoot":"src/components/transcriptions","sourcesContent":["<template>\n  <div class=\"list-content\">\n    <transition-group name=\"list-anim\" tag=\"ul\">\n      <li v-for=\"item in listData\" :key=\"item.id\">\n        <TranscriptionsListItem :item=\"item\"></TranscriptionsListItem>\n      </li>\n    </transition-group>\n    <i class=\"add-row\" @click=\"addNewData\"></i>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport TranscriptionsListItem from '@components/transcriptions/TranscriptionsListItem.vue'\n\nexport default {\n  name: 'TranscriptionsList',\n  props: {\n    listData: {\n      required: true,\n      type: Array,\n    },\n  },\n  components: {\n    TranscriptionsListItem,\n  },\n  methods: {\n    ...mapActions([\n      'addNewTranscription',\n    ]),\n    addNewData() {\n      this.addNewTranscription()\n    },\n  },\n}\n</script>\n\n<style scoped lang=\"scss\">\n.list-content {\n  overflow: hidden;\n\n  ul {\n    list-style: none;\n    margin: 0 0 $default-margin 0;\n    padding: 0 $default-padding;\n\n    li {\n      position: relative;\n      margin: 0;\n      background-color: #FFFFFF;\n      border-top: 1px solid $list-border-color;\n      border-right: 1px solid $list-border-color;\n      border-left: 1px solid $list-border-color;\n\n      &:last-child {\n        border-bottom: 1px solid $list-border-color;\n      }\n    }\n  }\n\n  i.add-row {\n    background: url('~@/assets/images/add-row.svg') center / cover no-repeat;\n    width: 32px;\n    height: 32px;\n    margin: 0 auto $default-margin auto;\n    display: block;\n    cursor: pointer;\n  }\n\n  .list-anim-enter-active, .list-anim-leave-active {\n    transition: all $default-time $default-easing;\n  }\n\n  .list-anim-enter, .list-anim-leave-to {\n    opacity: 0;\n    margin-left: -100%;\n  }\n}\n</style>\n"]}]}